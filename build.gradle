// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.buildConfig = [
            'compileSdk': 28,
            'minSdk'    : 24,
            'targetSdk' : 27,
            'version'   : [
                    'major': 1,
                    'minor': 2,
                    'patch': 1,
                    'build': 0,
            ],
    ]

    ext.versions = [
            'supportLibrary'       : '28.0.0',
            'kotlin'               : '1.3.60',
            'kotlinCoroutines'     : '1.3.3-native-mt',
            'multiplatformSettings': '0.4.1',
            'sqldelight'           : '1.3.0-mt2-SNAPSHOT',
            'stately'              : '0.9.4',
            'sqliter'              : '0.6.5',
//            'ktor'                 : '1.3.0-beta-2-SNAPSHOT',
            'serialization'        : '0.14.0',
            'xcode'                : '0.1.5',
            'testhelp'             : '0.2.8',
            'firebase'             : '17.0.1',
            'firestoreAndroid'     : '20.2.0',
            'firestoreKmp'         : '0.2.6-mt2-SNAPSHOT',
            'fabric'               : '1.29.0',
            'crashlytics'          : '2.10.1'
    ]
    ext.deps = [
            'kotlin'               : [
                    'stdlib'    : [
                            'common': "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}",
                            'jdk'   : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}",
                    ],
                    'test'      : [
                            'common'     : "org.jetbrains.kotlin:kotlin-test-common:${versions.kotlin}",
                            'annotations': "org.jetbrains.kotlin:kotlin-test-annotations-common:${versions.kotlin}",
                            'jvm'        : "org.jetbrains.kotlin:kotlin-test:${versions.kotlin}",
                            'junit'      : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
                            'reflect'    : "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}",
                    ],
                    'coroutines': [
                            'common' : "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:${versions.kotlinCoroutines}",
                            'jdk'    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}",
                            'native' : "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:${versions.kotlinCoroutines}",
                            'android': "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}",
                    ],
            ],
            'multiplatformSettings': "com.russhwolf:multiplatform-settings:${versions.multiplatformSettings}"
            ,
            'sqldelight'           : [
                    'runtime'      : "co.touchlab.sqldelight:runtime:${versions.sqldelight}",
                    'runtimeJdk'   : "co.touchlab.sqldelight:runtime-jvm:${versions.sqldelight}",
                    'driverIos'    : "co.touchlab.sqldelight:ios-driver:${versions.sqldelight}",
                    'driverAndroid': "co.touchlab.sqldelight:android-driver:${versions.sqldelight}",
                    'driverSqlite' : "co.touchlab.sqldelight:sqlite-driver:${versions.sqldelight}",
            ]
            ,
            'sqliter'              : [
                    'ios': "co.touchlab:sqliter:${versions.sqliter}",
            ]
            ,
            /*'ktor'                 : [
                    'commonCore' : "io.ktor:ktor-client-core:${versions.ktor}",
                    'commonJson' : "io.ktor:ktor-client-json:${versions.ktor}",
                    'jvmCore'    : "io.ktor:ktor-client-core-jvm:${versions.ktor}",
                    'androidCore': "io.ktor:ktor-client-okhttp:${versions.ktor}",
                    'jvmJson'    : "io.ktor:ktor-client-json-jvm:${versions.ktor}",
                    'ios'        : "io.ktor:ktor-client-ios:${versions.ktor}",
                    'iosCore'    : "io.ktor:ktor-client-core-native:${versions.ktor}",
                    'iosJson'    : "io.ktor:ktor-client-json-native:${versions.ktor}"
            ]
            ,*/
            'serialization'        : [
                    'commonRuntime': "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:${versions.serialization}",
                    'jvmRuntime'   : "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${versions.serialization}",
                    'iosRuntime'   : "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:${versions.serialization}",
            ]
            ,
            'firebase'             : [
                    'androidCore'     : "com.google.firebase:firebase-core:${versions.firebase}",
                    'androidMessaging': "com.google.firebase:firebase-messaging:19.0.1",
                    'firestoreAndroid': "com.google.firebase:firebase-firestore:${versions.firestoreAndroid}",
                    'firestoreKmp'    : "co.touchlab:firestore:${versions.firestoreKmp}",

            ],
            'testhelp'             : "co.touchlab:testhelp:${versions.testhelp}",
            'crashlytics'          : "com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}"
    ]
    repositories {
        google()
        jcenter()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${versions.kotlin}"
        classpath "co.touchlab.sqldelight:gradle-plugin:${versions.sqldelight}"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
