apply plugin: 'kotlin-multiplatform'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'
apply plugin: 'com.android.library'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.squareup.sqldelight'

// CocoaPods requires the podspec to have a version.
version = "1.0"

android {
    compileSdkVersion 29
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        //This is for MultiplatformSettings
        debug {
            // MPP libraries don't currently get this resolution automatically
            matchingFallbacks = ['release']
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

sqldelight {
    AnyNameDatabase {
        packageName = "test"
    }
}


kotlin {
    def onPhone = System.getenv('SDK_NAME')?.startsWith("iphoneos")
    if(onPhone){
        iosArm64("ios") {
            configure([compilations.main]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {

                }
            }
        }
    }else{
        iosX64("ios") {
            configure([compilations.main]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {

                }
            }
        }
    }

    android()

    sourceSets {

        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}"

                implementation deps.serialization.commonRuntime

                implementation deps.sqldelight.runtime

                implementation deps.kotlin.coroutines.common

                implementation "co.touchlab:stately:${versions.stately}"
                implementation "co.touchlab:stately-collections:${versions.stately}"

                implementation "io.ktor:ktor-client-core:1.3.0-rc2"
                implementation "io.ktor:ktor-client-serialization:1.3.0-rc2"

//                implementation deps.firebase.firestoreKmp
                implementation 'co.touchlab:firestore:0.2.6-mt2-SNAPSHOT'
            }
        }

        iosMain {
            dependencies {
                implementation deps.serialization.iosRuntime

                implementation deps.sqldelight.driverIos
                implementation deps.sqliter.ios

                implementation deps.kotlin.coroutines.native
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.3.3-native-mt") {
                    force = true
                }
                implementation("io.ktor:ktor-client-ios:1.3.0-rc2")
                implementation "io.ktor:ktor-client-serialization-native:1.3.0-rc2"
            }
        }

        androidMain {
            dependencies {
                implementation deps.serialization.jvmRuntime

                api deps.sqldelight.driverAndroid

                implementation deps.kotlin.coroutines.jdk
                implementation deps.kotlin.coroutines.android

                implementation "io.ktor:ktor-client-android:1.3.0-rc2"
                implementation "io.ktor:ktor-client-serialization-jvm:1.3.0-rc2"



                implementation 'androidx.appcompat:appcompat:1.1.0'
                implementation 'com.google.firebase:firebase-firestore:21.3.1'
            }
        }
    }
    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Lots of Droidcon Stuff"
        homepage = "https://github.com/touchlab/DroidconKotlin"
    }
}